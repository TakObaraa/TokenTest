import * as t from '@babel/types';
import { StoryId, StoryName, ComponentTitle } from '@storybook/csf';

declare const makeDescribe: (title: string, stmts: t.Statement[]) => t.ExpressionStatement;
type V4Entry = {
    type?: 'story' | 'docs';
    id: StoryId;
    name: StoryName;
    title: ComponentTitle;
    tags?: string[];
};
type V4Index = {
    v: 4;
    entries: Record<StoryId, V4Entry>;
};
type StoryParameters = {
    __id: StoryId;
    docsOnly?: boolean;
    fileName?: string;
};
type V3Story = Omit<V4Entry, 'type'> & {
    parameters?: StoryParameters;
};
type V3StoriesIndex = {
    v: 3;
    stories: Record<StoryId, V3Story>;
};
type UnsupportedVersion = {
    v: number;
};
/**
 * Generate one test file per component so that Jest can
 * run them in parallel.
 */
declare const transformPlaywrightJson: (index: V3StoriesIndex | V4Index | UnsupportedVersion) => Record<string, string>;

export { UnsupportedVersion, V3StoriesIndex, V4Index, makeDescribe, transformPlaywrightJson };
